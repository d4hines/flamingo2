// Generated automatically by nearley, version 2.19.5
// http://github.com/Hardmath123/nearley
(function () {
function id(x) { return x[0]; }
var grammar = {
    Lexer: undefined,
    ParserRules: [
    {"name": "_$ebnf$1", "symbols": []},
    {"name": "_$ebnf$1", "symbols": ["_$ebnf$1", "wschar"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "_", "symbols": ["_$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "__$ebnf$1", "symbols": ["wschar"]},
    {"name": "__$ebnf$1", "symbols": ["__$ebnf$1", "wschar"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "__", "symbols": ["__$ebnf$1"], "postprocess": function(d) {return null;}},
    {"name": "wschar", "symbols": [/[ \t\n\v\f]/], "postprocess": id},
    {"name": "boolean$string$1", "symbols": [{"literal":"t"}, {"literal":"r"}, {"literal":"u"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "boolean", "symbols": ["boolean$string$1"]},
    {"name": "boolean$string$2", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"l"}, {"literal":"s"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "boolean", "symbols": ["boolean$string$2"]},
    {"name": "non_zero_digit", "symbols": [/[1-9]/]},
    {"name": "digit", "symbols": [/[0-9]/]},
    {"name": "lowercase_letter", "symbols": [/[a-z]/]},
    {"name": "uppercase_letter", "symbols": [/[A-Z]/]},
    {"name": "letter", "symbols": [/[A-Za-z]/]},
    {"name": "identifier$ebnf$1", "symbols": [/[a-z]/]},
    {"name": "identifier$ebnf$1", "symbols": ["identifier$ebnf$1", /[a-z]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "identifier$ebnf$2", "symbols": []},
    {"name": "identifier$ebnf$2", "symbols": ["identifier$ebnf$2", /[A-Za-z0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "identifier", "symbols": ["identifier$ebnf$1", "identifier$ebnf$2"]},
    {"name": "variable$ebnf$1", "symbols": [/[A-Z]/]},
    {"name": "variable$ebnf$1", "symbols": ["variable$ebnf$1", /[A-Z]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "variable$ebnf$2", "symbols": []},
    {"name": "variable$ebnf$2", "symbols": ["variable$ebnf$2", /[A-Za-z0-9]/], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "variable", "symbols": ["variable$ebnf$1", "variable$ebnf$2"]},
    {"name": "positive_integer$ebnf$1", "symbols": ["non_zero_digit"]},
    {"name": "positive_integer$ebnf$1", "symbols": ["positive_integer$ebnf$1", "non_zero_digit"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "positive_integer", "symbols": ["positive_integer$ebnf$1"]},
    {"name": "integer", "symbols": [{"literal":"0"}]},
    {"name": "integer", "symbols": ["positive_integer"]},
    {"name": "integer", "symbols": [{"literal":"-"}, "positive_integer"]},
    {"name": "arithmetic_op", "symbols": [{"literal":"+"}]},
    {"name": "arithmetic_op", "symbols": [{"literal":"-"}]},
    {"name": "arithmetic_op", "symbols": [{"literal":"-"}]},
    {"name": "arithmetic_op", "symbols": [{"literal":"*"}]},
    {"name": "arithmetic_op", "symbols": [{"literal":"/"}]},
    {"name": "arithmetic_op$string$1", "symbols": [{"literal":"m"}, {"literal":"o"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "arithmetic_op", "symbols": ["arithmetic_op$string$1"]},
    {"name": "comparison_rel", "symbols": [{"literal":">"}]},
    {"name": "comparison_rel$string$1", "symbols": [{"literal":">"}, {"literal":"="}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "comparison_rel", "symbols": ["comparison_rel$string$1"]},
    {"name": "comparison_rel", "symbols": [{"literal":"<"}]},
    {"name": "comparison_rel$string$2", "symbols": [{"literal":"<"}, {"literal":"="}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "comparison_rel", "symbols": ["comparison_rel$string$2"]},
    {"name": "arithmetic_rel", "symbols": ["eq"]},
    {"name": "arithmetic_rel", "symbols": ["neq"]},
    {"name": "arithmetic_rel", "symbols": ["comparison_rel"]},
    {"name": "eq", "symbols": [{"literal":"="}]},
    {"name": "neq$string$1", "symbols": [{"literal":"!"}, {"literal":"="}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "neq", "symbols": ["neq$string$1"]},
    {"name": "basic_arithmetic_term", "symbols": ["variable"]},
    {"name": "basic_arithmetic_term", "symbols": ["identifier"]},
    {"name": "basic_arithmetic_term", "symbols": ["integer"]},
    {"name": "basic_term", "symbols": ["basic_arithmetic_term"]},
    {"name": "basic_term", "symbols": ["boolean"]},
    {"name": "function_term", "symbols": ["identifier", "function_args"]},
    {"name": "function_args$macrocall$2", "symbols": ["term"]},
    {"name": "function_args$macrocall$1$ebnf$1", "symbols": []},
    {"name": "function_args$macrocall$1$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "_", "function_args$macrocall$2"]},
    {"name": "function_args$macrocall$1$ebnf$1", "symbols": ["function_args$macrocall$1$ebnf$1", "function_args$macrocall$1$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "function_args$macrocall$1", "symbols": ["function_args$macrocall$2", "_", "function_args$macrocall$1$ebnf$1"]},
    {"name": "function_args", "symbols": [{"literal":"("}, "function_args$macrocall$1", {"literal":")"}]},
    {"name": "arithmetic_term", "symbols": ["basic_arithmetic_term", "_", "arithmetic_op", "basic_arithmetic_term"]},
    {"name": "term", "symbols": ["basic_term"]},
    {"name": "term", "symbols": ["arithmetic_term"]},
    {"name": "positive_function_literal", "symbols": ["function_term"]},
    {"name": "positive_function_literal", "symbols": ["function_term", "eq", "term"]},
    {"name": "function_literal", "symbols": ["positive_function_literal"]},
    {"name": "function_literal", "symbols": [{"literal":"-"}, "function_term"]},
    {"name": "function_literal", "symbols": ["function_term", "neq", "term"]},
    {"name": "literal", "symbols": ["function_literal"]},
    {"name": "literal", "symbols": ["arithmetic_term", "_", "arithmetic_rel", "_", "arithmetic_term"]},
    {"name": "var_id", "symbols": ["variable"]},
    {"name": "var_id", "symbols": ["identifier"]},
    {"name": "body$macrocall$2", "symbols": ["literal"]},
    {"name": "body$macrocall$1$ebnf$1", "symbols": []},
    {"name": "body$macrocall$1$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "_", "body$macrocall$2"]},
    {"name": "body$macrocall$1$ebnf$1", "symbols": ["body$macrocall$1$ebnf$1", "body$macrocall$1$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "body$macrocall$1", "symbols": ["body$macrocall$2", "_", "body$macrocall$1$ebnf$1"]},
    {"name": "body", "symbols": ["body$macrocall$1"]},
    {"name": "dynamic_causal_law$string$1", "symbols": [{"literal":"o"}, {"literal":"c"}, {"literal":"c"}, {"literal":"u"}, {"literal":"r"}, {"literal":"s"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dynamic_causal_law$string$2", "symbols": [{"literal":"c"}, {"literal":"a"}, {"literal":"u"}, {"literal":"s"}, {"literal":"e"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dynamic_causal_law$string$3", "symbols": [{"literal":"i"}, {"literal":"f"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "dynamic_causal_law", "symbols": ["dynamic_causal_law$string$1", "_", "var_id", "_", {"literal":")"}, "__", "dynamic_causal_law$string$2", "__", "positive_function_literal", "__", "dynamic_causal_law$string$3", "__", "body", {"literal":"."}]},
    {"name": "state_contraint$string$1", "symbols": [{"literal":"i"}, {"literal":"f"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "state_contraint", "symbols": ["sc_head", "_", "state_contraint$string$1", "_", "body", {"literal":"."}]},
    {"name": "sc_head$string$1", "symbols": [{"literal":"f"}, {"literal":"a"}, {"literal":"l"}, {"literal":"s"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "sc_head", "symbols": ["sc_head$string$1"]},
    {"name": "sc_head", "symbols": ["positive_function_literal"]},
    {"name": "definition$string$1", "symbols": [{"literal":"i"}, {"literal":"f"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "definition", "symbols": ["function_term", "_", "definition$string$1", "_", "body", "_", {"literal":"."}]},
    {"name": "executability_condition$string$1", "symbols": [{"literal":"i"}, {"literal":"m"}, {"literal":"p"}, {"literal":"o"}, {"literal":"s"}, {"literal":"s"}, {"literal":"i"}, {"literal":"b"}, {"literal":"l"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "executability_condition$string$2", "symbols": [{"literal":"o"}, {"literal":"c"}, {"literal":"c"}, {"literal":"u"}, {"literal":"r"}, {"literal":"s"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "executability_condition$string$3", "symbols": [{"literal":"i"}, {"literal":"f"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "executability_condition", "symbols": ["executability_condition$string$1", "_", "executability_condition$string$2", "_", "var_id", "_", {"literal":")"}, "_", "executability_condition$string$3", "_", "extended_body"]},
    {"name": "extended_body_part", "symbols": ["literal"]},
    {"name": "extended_body_part$string$1", "symbols": [{"literal":"o"}, {"literal":"c"}, {"literal":"c"}, {"literal":"u"}, {"literal":"r"}, {"literal":"s"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "extended_body_part", "symbols": ["extended_body_part$string$1", "_", "var_id", "_", {"literal":")"}]},
    {"name": "extended_body_part$string$2", "symbols": [{"literal":"o"}, {"literal":"c"}, {"literal":"c"}, {"literal":"u"}, {"literal":"r"}, {"literal":"s"}, {"literal":"("}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "extended_body_part", "symbols": [{"literal":"-"}, "extended_body_part$string$2", "_", "var_id", "_", {"literal":")"}]},
    {"name": "extended_body$macrocall$2", "symbols": ["extended_body_part"]},
    {"name": "extended_body$macrocall$1$ebnf$1", "symbols": []},
    {"name": "extended_body$macrocall$1$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "_", "extended_body$macrocall$2"]},
    {"name": "extended_body$macrocall$1$ebnf$1", "symbols": ["extended_body$macrocall$1$ebnf$1", "extended_body$macrocall$1$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "extended_body$macrocall$1", "symbols": ["extended_body$macrocall$2", "_", "extended_body$macrocall$1$ebnf$1"]},
    {"name": "extended_body", "symbols": ["extended_body$macrocall$1"]},
    {"name": "system_description$string$1", "symbols": [{"literal":"s"}, {"literal":"y"}, {"literal":"s"}, {"literal":"t"}, {"literal":"e"}, {"literal":"m"}, {"literal":" "}, {"literal":"d"}, {"literal":"e"}, {"literal":"s"}, {"literal":"c"}, {"literal":"r"}, {"literal":"i"}, {"literal":"p"}, {"literal":"t"}, {"literal":"i"}, {"literal":"o"}, {"literal":"n"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "system_description", "symbols": ["_", "system_description$string$1", "_", "identifier", "_", "theory"]},
    {"name": "theory$string$1", "symbols": [{"literal":"t"}, {"literal":"h"}, {"literal":"e"}, {"literal":"o"}, {"literal":"r"}, {"literal":"y"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "theory", "symbols": ["theory$string$1", "_", "identifier", "_", "set_of_modules"]},
    {"name": "theory$string$2", "symbols": [{"literal":"i"}, {"literal":"m"}, {"literal":"p"}, {"literal":"o"}, {"literal":"r"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "theory$string$3", "symbols": [{"literal":"f"}, {"literal":"r"}, {"literal":"o"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "theory", "symbols": ["theory$string$2", "_", "identifier", "_", "theory$string$3", "identifier"]},
    {"name": "set_of_modules$ebnf$1", "symbols": []},
    {"name": "set_of_modules$ebnf$1", "symbols": ["set_of_modules$ebnf$1", "module"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "set_of_modules", "symbols": ["set_of_modules$ebnf$1"]},
    {"name": "module$string$1", "symbols": [{"literal":"m"}, {"literal":"o"}, {"literal":"d"}, {"literal":"u"}, {"literal":"l"}, {"literal":"e"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "module", "symbols": ["module$string$1", "_", "identifier", "_", "module_body"]},
    {"name": "module$string$2", "symbols": [{"literal":"i"}, {"literal":"m"}, {"literal":"p"}, {"literal":"o"}, {"literal":"r"}, {"literal":"t"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "module$string$3", "symbols": [{"literal":"f"}, {"literal":"r"}, {"literal":"o"}, {"literal":"m"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "module", "symbols": ["module$string$2", "identifier", {"literal":"."}, "identifier", "module$string$3", "identifier"]},
    {"name": "module_body$ebnf$1", "symbols": ["sort_declarations"], "postprocess": id},
    {"name": "module_body$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "module_body$ebnf$2", "symbols": ["constant_declarations"], "postprocess": id},
    {"name": "module_body$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "module_body$ebnf$3", "symbols": ["function_declarations"], "postprocess": id},
    {"name": "module_body$ebnf$3", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "module_body$ebnf$4", "symbols": ["axioms"], "postprocess": id},
    {"name": "module_body$ebnf$4", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "module_body", "symbols": ["module_body$ebnf$1", "module_body$ebnf$2", "module_body$ebnf$3", "module_body$ebnf$4"]},
    {"name": "sort_declarations$string$1", "symbols": [{"literal":"s"}, {"literal":"o"}, {"literal":"r"}, {"literal":"t"}, {"literal":" "}, {"literal":"d"}, {"literal":"e"}, {"literal":"c"}, {"literal":"l"}, {"literal":"a"}, {"literal":"r"}, {"literal":"a"}, {"literal":"t"}, {"literal":"i"}, {"literal":"o"}, {"literal":"n"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "sort_declarations$ebnf$1", "symbols": ["sort_decl"]},
    {"name": "sort_declarations$ebnf$1", "symbols": ["sort_declarations$ebnf$1", "sort_decl"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "sort_declarations", "symbols": ["sort_declarations$string$1", "__", "sort_declarations$ebnf$1"]},
    {"name": "sort_decl$ebnf$1$macrocall$2", "symbols": ["identifier"]},
    {"name": "sort_decl$ebnf$1$macrocall$1$ebnf$1", "symbols": []},
    {"name": "sort_decl$ebnf$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "_", "sort_decl$ebnf$1$macrocall$2"]},
    {"name": "sort_decl$ebnf$1$macrocall$1$ebnf$1", "symbols": ["sort_decl$ebnf$1$macrocall$1$ebnf$1", "sort_decl$ebnf$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "sort_decl$ebnf$1$macrocall$1", "symbols": ["sort_decl$ebnf$1$macrocall$2", "_", "sort_decl$ebnf$1$macrocall$1$ebnf$1"]},
    {"name": "sort_decl$ebnf$1", "symbols": ["sort_decl$ebnf$1$macrocall$1"], "postprocess": id},
    {"name": "sort_decl$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "sort_decl$string$1", "symbols": [{"literal":":"}, {"literal":":"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "sort_decl$ebnf$2$macrocall$2", "symbols": ["sort_name"]},
    {"name": "sort_decl$ebnf$2$macrocall$1$ebnf$1", "symbols": []},
    {"name": "sort_decl$ebnf$2$macrocall$1$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "_", "sort_decl$ebnf$2$macrocall$2"]},
    {"name": "sort_decl$ebnf$2$macrocall$1$ebnf$1", "symbols": ["sort_decl$ebnf$2$macrocall$1$ebnf$1", "sort_decl$ebnf$2$macrocall$1$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "sort_decl$ebnf$2$macrocall$1", "symbols": ["sort_decl$ebnf$2$macrocall$2", "_", "sort_decl$ebnf$2$macrocall$1$ebnf$1"]},
    {"name": "sort_decl$ebnf$2", "symbols": ["sort_decl$ebnf$2$macrocall$1"], "postprocess": id},
    {"name": "sort_decl$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "sort_decl", "symbols": ["identifier", "_", "sort_decl$ebnf$1", "sort_decl$string$1", "_", "sort_name", "_", "sort_decl$ebnf$2", "_", "attributes"]},
    {"name": "sort_name", "symbols": ["identifier"]},
    {"name": "sort_name$string$1", "symbols": [{"literal":"."}, {"literal":"."}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "sort_name", "symbols": ["integer", "sort_name$string$1", "integer"]},
    {"name": "attributes$ebnf$1", "symbols": ["attribute_decl"]},
    {"name": "attributes$ebnf$1", "symbols": ["attributes$ebnf$1", "attribute_decl"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "attributes", "symbols": ["attributes$ebnf$1"]},
    {"name": "attribute_decl$ebnf$1", "symbols": ["arguments"], "postprocess": id},
    {"name": "attribute_decl$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "attribute_decl", "symbols": ["identifier", {"literal":":"}, "__", "attribute_decl$ebnf$1", "__", "identifier"]},
    {"name": "arguments$ebnf$1$subexpression$1", "symbols": [{"literal":"x"}, "__", "identifier"]},
    {"name": "arguments$ebnf$1", "symbols": ["arguments$ebnf$1$subexpression$1"], "postprocess": id},
    {"name": "arguments$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "arguments$string$1", "symbols": [{"literal":"-"}, {"literal":">"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "arguments", "symbols": ["identifier", "__", "arguments$ebnf$1", "__", "arguments$string$1"]},
    {"name": "constant_declarations$string$1", "symbols": [{"literal":"o"}, {"literal":"b"}, {"literal":"j"}, {"literal":"e"}, {"literal":"c"}, {"literal":"t"}, {"literal":" "}, {"literal":"c"}, {"literal":"o"}, {"literal":"n"}, {"literal":"s"}, {"literal":"t"}, {"literal":"a"}, {"literal":"n"}, {"literal":"t"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "constant_declarations$ebnf$1", "symbols": ["constant_decl"]},
    {"name": "constant_declarations$ebnf$1", "symbols": ["constant_declarations$ebnf$1", "constant_decl"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "constant_declarations", "symbols": ["constant_declarations$string$1", "_", "constant_declarations$ebnf$1"]},
    {"name": "constant_decl", "symbols": ["identifier", "_", "constant_params", "_", {"literal":":"}, "identifier"]},
    {"name": "constant_params$ebnf$1$macrocall$2", "symbols": ["identifier"]},
    {"name": "constant_params$ebnf$1$macrocall$1$ebnf$1", "symbols": []},
    {"name": "constant_params$ebnf$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [{"literal":","}, "_", "constant_params$ebnf$1$macrocall$2"]},
    {"name": "constant_params$ebnf$1$macrocall$1$ebnf$1", "symbols": ["constant_params$ebnf$1$macrocall$1$ebnf$1", "constant_params$ebnf$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "constant_params$ebnf$1$macrocall$1", "symbols": ["constant_params$ebnf$1$macrocall$2", "_", "constant_params$ebnf$1$macrocall$1$ebnf$1"]},
    {"name": "constant_params$ebnf$1", "symbols": ["constant_params$ebnf$1$macrocall$1"], "postprocess": id},
    {"name": "constant_params$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "constant_params", "symbols": [{"literal":"("}, "_", "identifier", "_", "constant_params$ebnf$1", "_", {"literal":")"}]},
    {"name": "function_declarations$string$1", "symbols": [{"literal":"f"}, {"literal":"u"}, {"literal":"n"}, {"literal":"c"}, {"literal":"t"}, {"literal":"i"}, {"literal":"o"}, {"literal":"n"}, {"literal":" "}, {"literal":"d"}, {"literal":"e"}, {"literal":"c"}, {"literal":"l"}, {"literal":"a"}, {"literal":"r"}, {"literal":"a"}, {"literal":"t"}, {"literal":"i"}, {"literal":"o"}, {"literal":"n"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "function_declarations$ebnf$1", "symbols": ["static_declarations"], "postprocess": id},
    {"name": "function_declarations$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "function_declarations", "symbols": ["function_declarations$string$1", "_", "function_declarations$ebnf$1", "_", "fluent_declarations"]},
    {"name": "static_declarations$string$1", "symbols": [{"literal":"s"}, {"literal":"t"}, {"literal":"a"}, {"literal":"t"}, {"literal":"i"}, {"literal":"c"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "static_declarations$ebnf$1", "symbols": ["basic_function_declarations"], "postprocess": id},
    {"name": "static_declarations$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "static_declarations$ebnf$2", "symbols": ["defined_function_declarations"], "postprocess": id},
    {"name": "static_declarations$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "static_declarations", "symbols": ["static_declarations$string$1", "_", "static_declarations$ebnf$1", "_", "static_declarations$ebnf$2"]},
    {"name": "fluent_declarations$string$1", "symbols": [{"literal":"f"}, {"literal":"l"}, {"literal":"u"}, {"literal":"e"}, {"literal":"n"}, {"literal":"t"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "fluent_declarations$ebnf$1", "symbols": ["basic_function_declarations"], "postprocess": id},
    {"name": "fluent_declarations$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "fluent_declarations$ebnf$2", "symbols": ["defined_function_declarations"], "postprocess": id},
    {"name": "fluent_declarations$ebnf$2", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "fluent_declarations", "symbols": ["fluent_declarations$string$1", "_", "fluent_declarations$ebnf$1", "_", "fluent_declarations$ebnf$2"]},
    {"name": "basic_function_declarations$string$1", "symbols": [{"literal":"b"}, {"literal":"a"}, {"literal":"s"}, {"literal":"i"}, {"literal":"c"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "basic_function_declarations$ebnf$1", "symbols": ["function_decl"]},
    {"name": "basic_function_declarations$ebnf$1", "symbols": ["basic_function_declarations$ebnf$1", "function_decl"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "basic_function_declarations", "symbols": ["basic_function_declarations$string$1", "_", "basic_function_declarations$ebnf$1"]},
    {"name": "defined_function_declarations$string$1", "symbols": [{"literal":"d"}, {"literal":"e"}, {"literal":"f"}, {"literal":"i"}, {"literal":"n"}, {"literal":"e"}, {"literal":"d"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "defined_function_declarations$ebnf$1", "symbols": ["function_decl"]},
    {"name": "defined_function_declarations$ebnf$1", "symbols": ["defined_function_declarations$ebnf$1", "function_decl"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "defined_function_declarations", "symbols": ["defined_function_declarations$string$1", "_", "defined_function_declarations$ebnf$1"]},
    {"name": "function_decl$ebnf$1$string$1", "symbols": [{"literal":"t"}, {"literal":"o"}, {"literal":"t"}, {"literal":"a"}, {"literal":"l"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "function_decl$ebnf$1", "symbols": ["function_decl$ebnf$1$string$1"], "postprocess": id},
    {"name": "function_decl$ebnf$1", "symbols": [], "postprocess": function(d) {return null;}},
    {"name": "function_decl", "symbols": ["function_decl$ebnf$1", "_", "identifier", "_", {"literal":":"}, "_", "arguments", "__", "identifier"]},
    {"name": "axioms$string$1", "symbols": [{"literal":"a"}, {"literal":"x"}, {"literal":"i"}, {"literal":"o"}, {"literal":"m"}, {"literal":"s"}], "postprocess": function joiner(d) {return d.join('');}},
    {"name": "axioms$ebnf$1", "symbols": ["axiom"]},
    {"name": "axioms$ebnf$1", "symbols": ["axioms$ebnf$1", "axiom"], "postprocess": function arrpush(d) {return d[0].concat([d[1]]);}},
    {"name": "axioms", "symbols": ["axioms$string$1", "axioms$ebnf$1"]},
    {"name": "axiom", "symbols": ["dynamic_causal_law"]},
    {"name": "axiom", "symbols": ["state_contraint"]},
    {"name": "axiom", "symbols": ["definition"]},
    {"name": "axiom", "symbols": ["executability_condition"]}
]
  , ParserStart: "boolean"
}
if (typeof module !== 'undefined'&& typeof module.exports !== 'undefined') {
   module.exports = grammar;
} else {
   window.grammar = grammar;
}
})();
