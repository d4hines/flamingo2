module todo
enums
    filters :: { all, active, completed }
sorts
    todos :: ephemeral
    new_todo :: create_ephemeral
        attributes
            text : string
    todo_action :: actions
        attributes
            target : todos
    toggle_todo :: todo_action
    destroy_todo :: todo_action
    edit_todo :: todo_action
        attributes
            text : string
    toggle_all :: actions
    clear_completed :: actions
    init :: actions
fluents
    basic 
        text : todos -> strings
        completed : todos -> booleans

        show_clear_completed : booleans

        mark_all_as_complete_checked : booleans

        input : strings
    defined
        show_main_and_footer : booleans
axioms
    occurs action(X) causes
        text(Todo) = Text,
        completed(Todo) = false,
        input = "",
    if
        instance(X, new_todo),
        input = Text,
        next_active = Todo.

    occurs action(X) causes
        completed(Todo) = Completed,
        mark_all_as_complete_checked = !Completed
    if
        instance(X, mark_all_as_complete_checked),
        intsance(Todo, todos)
        mark_all_as_complete_checked = Completed.

     occurs action(X) causes completed(Todo) = !Completed if
        instance(X, toggle_todo),
        target(X) = Todo,
        completed(Todo) = Completed.
    
    occurs action(X) causes text(Todo) = Text if
        instance(X, edit_todo),
        target(X) = Todo,
        input = Text.
    
    occurs action(X) causes destroy Todo if
        instance(X, destroy_todo),
        target(X) = Todo.
    
    occurs action(X) causes destroy Todo if
        instance(X, clear_completed),
        instance(Todo, todos),
        completed(Todo).

    show_main_and_footer if instance(X, todos), active(X).
    show_clear_completed if completed(_).

    impossible occurs action(X) if
        instance(X, clear_completed),
        -show_clear_completed.
